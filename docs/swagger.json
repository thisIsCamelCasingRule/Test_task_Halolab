{
    "swagger": "2.0",
    "info": {
        "description": "A sensor data management service API in Go.",
        "title": "Underwater sensor data aggregator service",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/group/{groupName}/species": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Retrieves group's fish species list with amount from last record of each sensor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FishMeasurement"
                            }
                        }
                    }
                }
            }
        },
        "/group/{groupName}/species/top/{N}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Retrieves group's list with amount of top N fish species detected from last record of each sensor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "N",
                        "name": "N",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from datetime",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "till datetime",
                        "name": "till",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FishMeasurement"
                            }
                        }
                    }
                }
            }
        },
        "/group/{groupName}/temperature/average": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Retrieves group average temperature from last record of each sensor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "/group/{groupName}/transparency/average": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Retrieves group average transparency from last record of each sensor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/region/temperature/max": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "region"
                ],
                "summary": "Retrieves region max temperature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "min X value",
                        "name": "xMin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "max X value",
                        "name": "xMax",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "min Y value",
                        "name": "yMin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "max Y value",
                        "name": "yMax",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "min Z value",
                        "name": "zMin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "max Z value",
                        "name": "zMax",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "/region/temperature/min": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "region"
                ],
                "summary": "Retrieves region min temperature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "min X value",
                        "name": "xMin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "max X value",
                        "name": "xMax",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "min Y value",
                        "name": "yMin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "max Y value",
                        "name": "yMax",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "min Z value",
                        "name": "zMin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "max Z value",
                        "name": "zMax",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "/sensor/{codeName}/temperature/average": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensor"
                ],
                "summary": "Retrieves sensor average temperature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sensor code in format (group id)",
                        "name": "codeName",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "from datetime",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "till datetime",
                        "name": "till",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "number"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.FishMeasurement": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "specie": {
                    "type": "string"
                }
            }
        }
    }
}